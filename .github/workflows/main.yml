name: ML Classification Pipeline with HuggingFace Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-train-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install huggingface_hub scikit-learn joblib matplotlib

      # 4. Run dataset tests
      - name: Run dataset tests
        run: python test.py

      # 5. Train classification model
      - name: Train classification model
        run: python train_model.py

      # 6. Save model artifact
      - name: Save trained model
        run: |
          mkdir -p model
          cp model.pkl model/

      # 7. Upload artifacts (model + evaluation)
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: classification-results
          path: |
            model.pkl
            ConfusionMatrix.png
            FeatureImportance.png
            scores.txt

      # 8. Deploy to HuggingFace Hub
      - name: Deploy model to HuggingFace Hub
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          from huggingface_hub import HfApi, upload_file
          import os

          repo_id = "Jurk06/classification-model"
          api = HfApi()

          # Create repo if it doesn't exist
          try:
              api.create_repo(repo_id, private=False, repo_type="model")
          except:
              pass

          # Upload model file
          upload_file(
              path_or_fileobj="model/model.pkl",
              path_in_repo="model.pkl",
              repo_id=repo_id,
              repo_type="model",
              token=os.environ["HF_TOKEN"]
          )
        shell: python
